@use 'sass:math';

$grid-cols: 12;
$grid-gaps: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
);

$layout-values: flex-start, flex-end, center, space-between, space-around, space-evenly;

//layout base
.container{
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    pad: 0 20px;
    box-sizing: border-box;
}

.row{
    display: flex;
    flex-flow: row wrap;
}

//grid gaps
@each $key, $val in $grid-gaps{
    .gap-#{$key} > *{
        padding: $val;
    }
    .gap-#{$key}{
        margin-left: -$val;
        margin-right: -$val;
    }
}

//clases justify content
@each $val in $layout-values{
    .justify-#{$val}{
        justify-content: $val;
    }
}
//clases col
@include xs{
    @for $i from 1 through $grid-cols{
        .col-#{$i}-xs{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-cols);
        }
    }
}

@include sm{
    @for $i from 1 through $grid-cols{
        .col-#{$i}-sm{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-cols);
        }
    }
}

@include md{
    @for $i from 1 through $grid-cols{
        .col-#{$i}-md{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-cols);
        }
    }
}

@include lg{
    @for $i from 1 through $grid-cols{
        .col-#{$i}-lg{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-cols);
        }
    }
}

@include xl{
    @for $i from 1 through $grid-cols{
        .col-#{$i}-xl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-cols);
        }
    }
}